evc.david@type
evc.david@type
evc.david@cluster
getClusterReportFile(david, type="Term",
+ fileName="termClusterReport1.tab")
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
evc.degs.ensID <- mapIds(org.Mm.eg.db, keys = evc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL")
evc.degs.ensID
evc.bkground.ensID <- mapIds(org.Mm.eg.db, keys = evc.bkground, keytype = "SYMBOL", column="ENSEMBL")
evc.bkground.ensID <- mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL")
evc.bkground.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
evc.degs.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
evc.bkground.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david
result<-addList(david, mmPPAR.ensID, idType="ENSEMBL_GENE_ID",
listName="mmPPAR", listType="Gene")
result<-addList(david, evc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.degs", listType="Gene")
result<-addList(david, evc.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.bkground", listType="Background")
david
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentSpecies(david, "Mus musculus")
getSpecieNames(david)
setCurrentSpecies(david, "Mus musculus(897)")
setCurrentSpecies(david, "897")
david
setCurrentSpecies(david, 1)
david
getFunctionalAnnotationChartFile(david, fileName, threshold=0.1, count=2L)
?getFunctionalAnnotationChart
david
DAVIDFunctionalAnnotationChart(david)
setCurrentBackgroundPosition(david, 2)
setCurrentGeneListPosition(david, 2)
getFunctionalAnnotationChart(david)
evc.DAVID.result <- getFunctionalAnnotationChart(david)
evc.DAVID.result
head(evc.DAVID.result)
head(evc.DAVID.result[1:5,])
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
pparPath.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "test.txt")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
evc <- read.xlsx("../shared_data/PPARdata.xlsx", colNames=TRUE, rowNames=TRUE)
ppar.path <- read.xlsx("../shared_data/PPARpathway.xlsx", colNames=TRUE, rowNames=FALSE)
evc <- tibble::rownames_to_column(evc,"Gene")
evc.degs <- evc %>% filter(ape.adp <= 0.05 & MPG == "Yes" & abs(ape.logFC) >= 1)
evc.bkground <- evc %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hsPPAR <- na.omit(ppar.path$HGNCSym)
mmPPAR <- na.omit(ppar.path$MGISym)
mmPPAR.ensID <- mapIds(org.Mm.eg.db, keys = mmPPAR, keytype = "SYMBOL", column="ENSEMBL")
evc.degs.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
evc.bkground.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, mmPPAR.ensID, idType="ENSEMBL_GENE_ID",
listName="mmPPAR", listType="Gene")
result<-addList(david, evc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.degs", listType="Gene")
result<-addList(david, evc.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
evc.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "evcDEGS.DAVID.txt")
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
pparPath.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "PPARpath.DAVID.txt")
evc <- read.xlsx("../shared_data/PPARdata.xlsx", colNames=TRUE, rowNames=TRUE)
ppar.path <- read.xlsx("../shared_data/PPARpathway.xlsx", colNames=TRUE, rowNames=FALSE)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx", colNames=TRUE, rowNames=TRUE)
head(g1vRev)
tmp <- g1vRev
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
dim(tmp)
dim(g1vRev)
g1vRev[1:3,1:3]
head(g1vRev)
g1vRev.path
g1vRev.path$
fd
View(g1vRev.path)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev.path
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev <- tibble::rownames_to_column(evc,"Gene")
g1vRev.degs <- g1vRev %>% filter(ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logF) >= 1)
g1vRev <- tibble::rownames_to_column(evc,"Gene")
g1vRev.degs <- g1vRev %>% filter(ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 1)
head(g1vRev)
dim(g1vRev)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev <- tibble::rownames_to_column(evc,"Gene")
g1vRev.degs <- g1vRev %>% filter(ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 1)
head(g1vRev)
rm(g1vRev)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
head(g1vRev)
g1vRev <- tibble::rownames_to_column(evc,"Gene")
g1vRev.degs <- g1vRev %>% filter(ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 1)
head(g1vRev)
head(g1vRev)
rm(g1vRev)
rm(g1vRev.path)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
g1vRev.degs <- g1vRev %>% filter(g1vRev$ap <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 1)
head(g1vRev)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 1)
g1vRev.bkground <- g1vRev %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hallmark.e2f.ensID, idType="ENSEMBL_GENE_ID",
listName="hallmark.e2f.ensID", listType="Gene")
result<-addList(david, g1vRev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.degs", listType="Gene")
result<-addList(david, g1vRev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
g1vRev.DAVID.result <- getFunctionalAnnotationChart(david)
#getFunctionalAnnotationChartFile(david, "g1vRev.DEGS.DAVID.txt")
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
hallmark.e2f.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "hallmark.e2f.DAVID.txt")
getFunctionalAnnotationChartFile(david, "g1vRev.DEGS.DAVID.txt")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 1)
g1vRev.bkground <- g1vRev %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hallmark.e2f.ensID, idType="ENSEMBL_GENE_ID",
listName="hallmark.e2f.ensID", listType="Gene")
result<-addList(david, g1vRev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.degs", listType="Gene")
result<-addList(david, g1vRev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
g1vRev.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "g1vRev.DEGS.DAVID.txt")
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
hallmark.e2f.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "hallmark.e2f.DAVID.txt")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 0.58)
g1vRev.bkground <- g1vRev %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hallmark.e2f.ensID, idType="ENSEMBL_GENE_ID",
listName="hallmark.e2f.ensID", listType="Gene")
result<-addList(david, g1vRev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.degs", listType="Gene")
result<-addList(david, g1vRev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
g1vRev.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "g1vRev.DEGS.0.58FC.DAVID.txt")
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
hallmark.e2f.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "hallmark.e2f.DAVID.txt")
david
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 0.58)
g1vRev.bkground <- g1vRev %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hallmark.e2f.ensID, idType="ENSEMBL_GENE_ID",
listName="hallmark.e2f.ensID", listType="Gene")
result<-addList(david, g1vRev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.degs", listType="Gene")
result<-addList(david, g1vRev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
g1vRev.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "g1vRev.DEGS.0.58FC.DAVID.txt")
david
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
#g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 0.58)
g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & ape.G1.Rev.logFC <= 0.58)
g1vRev.bkground <- g1vRev %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hallmark.e2f.ensID, idType="ENSEMBL_GENE_ID",
listName="hallmark.e2f.ensID", listType="Gene")
result<-addList(david, g1vRev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.degs", listType="Gene")
result<-addList(david, g1vRev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
g1vRev.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "g1vRev.DEGS.0.58FC.DAVID.txt")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
#g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 0.58)
g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & ape.G1.Rev.logFC <= 0.58)
g1vRev.bkground <- g1vRev %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hallmark.e2f.ensID, idType="ENSEMBL_GENE_ID",
listName="hallmark.e2f.ensID", listType="Gene")
result<-addList(david, g1vRev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.degs", listType="Gene")
result<-addList(david, g1vRev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
g1vRev.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "g1vRev.upRev.0.58FC.DAVID.txt")
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
hallmark.e2f.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "hallmark.e2f.DAVID.txt")
g1vRev <- read.xlsx("../shared_data/GSE83647_G1vRev.xlsx", colNames=TRUE, rowNames=TRUE)
g1vRev.path <- read.xlsx("../shared_data/G1vRev_Pathway.xlsx")
g1vRev <- tibble::rownames_to_column(g1vRev,"Gene")
#g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & abs(ape.G1.Rev.logFC) >= 0.58)
g1vRev.degs <- g1vRev %>% filter(g1vRev$ape.G1.Rev.adp <= 0.05 & MPG == "Yes" & ape.G1.Rev.logFC <= 1)
g1vRev.bkground <- g1vRev %>% filter(MPG == "Yes") %>% dplyr::select(c("Gene"))
hallmark.e2f <- na.omit(g1vRev.path$HALLMARK_E2F_TARGETS)
hallmark.e2f.ensID <- mapIds(org.Hs.eg.db, keys = hallmark.e2f, keytype = "SYMBOL", column="ENSEMBL")
g1vRev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vRev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vRev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hallmark.e2f.ensID, idType="ENSEMBL_GENE_ID",
listName="hallmark.e2f.ensID", listType="Gene")
result<-addList(david, g1vRev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.degs", listType="Gene")
result<-addList(david, g1vRev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vRev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 2)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
g1vRev.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "g1vRev.upRev.1FC.DAVID.txt")
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
hallmark.e2f.DAVID.result <- getFunctionalAnnotationChart(david)
getFunctionalAnnotationChartFile(david, "hallmark.e2f.DAVID.txt")
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY.xlsx", colNames=TRUE, rowNames=FALSE)
E2F <- read.xlsx("../shared_data/HALLMARK_E2F_TARGETS.xlsx", colNames=TRUE, rowNames=FALSE)
TNF  <- read.xlsx("../shared_data/HALLMARK_TNFA_SIGNALING_VIA_NFKB.xlsx", colNames=TRUE, rowNames=FALSE)
MUSC <- read.xlsx("../shared_data/GO_SKELETAL_MUSCLE_CONTRACTION.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
E2F <- read.xlsx("../shared_data/HALLMARK_E2F_TARGETS.xlsx", colNames=TRUE, rowNames=FALSE)
TNF  <- read.xlsx("../shared_data/HALLMARK_TNFA_SIGNALING_VIA_NFKB.xlsx", colNames=TRUE, rowNames=FALSE)
MUSC <- read.xlsx("../shared_data/GO_SKELETAL_MUSCLE_CONTRACTION.xlsx", colNames=TRUE, rowNames=FALSE)
hsPPAR <- na.omit(PPAR$HGNCSym)
mmPPAR <- na.omit(PPAR$MGISym)
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
E2F <- read.xlsx("../shared_data/HALLMARK_E2F_TARGETS.xlsx", colNames=TRUE, rowNames=FALSE)
TNF  <- read.xlsx("../shared_data/HALLMARK_TNFA_SIGNALING_VIA_NFKB.xlsx", colNames=TRUE, rowNames=FALSE)
MUSC <- read.xlsx("../shared_data/GO_SKELETAL_MUSCLE_CONTRACTION.xlsx", colNames=TRUE, rowNames=FALSE)
hsPPAR <- na.omit(PPAR$HGNCSym)
mmPPAR <- na.omit(PPAR$MGISym)
mmPPAR.ensID <- mapIds(org.Mm.eg.db, keys = mmPPAR, keytype = "SYMBOL", column="ENSEMBL")
E2F.ensID <- mapIds(org.Hs.eg.db, keys = E2F, keytype = "SYMBOL", column="ENSEMBL")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
E2F <- read.xlsx("../shared_data/HALLMARK_E2F_TARGETS.xlsx", colNames=TRUE, rowNames=FALSE)
TNF  <- read.xlsx("../shared_data/HALLMARK_TNFA_SIGNALING_VIA_NFKB.xlsx", colNames=TRUE, rowNames=FALSE)
MUSC <- read.xlsx("../shared_data/GO_SKELETAL_MUSCLE_CONTRACTION.xlsx", colNames=TRUE, rowNames=FALSE)
class(PPAR)
head(PPAR)
class(E2F)
head(E2F)
head(TNF)
head(MUSC)
hsPPAR <- na.omit(PPAR$HGNCSym)
mmPPAR <- na.omit(PPAR$MGISym)
mmPPAR.ensID <- mapIds(org.Mm.eg.db, keys = mmPPAR, keytype = "SYMBOL", column="ENSEMBL")
E2F.ensID <- mapIds(org.Hs.eg.db, keys = E2F$HALLMARK_E2F_TARGETS, keytype = "SYMBOL", column="ENSEMBL")
TNF.ensID <- mapIds(org.Hs.eg.db, keys = TNF$HALLMARK_TNFA_SIGNALING_VIA_NFKB, keytype = "SYMBOL", column="ENSEMBL")
MUSC.ensID <- mapIds(org.Hs.eg.db, keys = MUSC$GO_SKELETAL_MUSCLE_CONTRACTION, keytype = "SYMBOL", column="ENSEMBL")
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, mmPPAR.ensID, idType="ENSEMBL_GENE_ID",
listName="mmPPAR", listType="Gene")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
hsPPAR <- na.omit(PPAR$HGNCSym)
mmPPAR <- na.omit(PPAR$MGISym)
mmPPAR.ensID <- mapIds(org.Mm.eg.db, keys = mmPPAR, keytype = "SYMBOL", column="ENSEMBL")
E2F.ensID <- mapIds(org.Hs.eg.db, keys = E2F$HALLMARK_E2F_TARGETS, keytype = "SYMBOL", column="ENSEMBL")
TNF.ensID <- mapIds(org.Hs.eg.db, keys = TNF$HALLMARK_TNFA_SIGNALING_VIA_NFKB, keytype = "SYMBOL", column="ENSEMBL")
MUSC.ensID <- mapIds(org.Hs.eg.db, keys = MUSC$GO_SKELETAL_MUSCLE_CONTRACTION, keytype = "SYMBOL", column="ENSEMBL")
##
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, mmPPAR.ensID, idType="ENSEMBL_GENE_ID",
listName="mmPPAR", listType="Gene")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "PPAR.DAVID.txt")
##
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, E2F.ensID, idType="ENSEMBL_GENE_ID",
listName="E2F", listType="Gene")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "E2F.DAVID.txt")
##
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, TNF.ensID, idType="ENSEMBL_GENE_ID",
listName="TNF", listType="Gene")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "TNF.DAVID.txt")
##
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, MUSC.ensID, idType="ENSEMBL_GENE_ID",
listName="Musc", listType="Gene")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "MUSC.DAVID.txt")
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart.xlsx", colNames=TRUE, rowNames=TRUE)
evc <- tibble::rownames_to_column(evc,"Gene")
evc.degs <- evc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
evc.bkground <- evc %>% dplyr::select(c("Gene"))
evc.degs.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
evc.bkground.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, evc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.degs", listType="Gene")
result<-addList(david, evc.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "evcDEGS.DAVID.txt")
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) >= 1)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "g1vRevDEGS.DAVID.txt")
hmp3avc <- tibble::rownames_to_column(hmp3avc,"Gene")
hmp3avc.degs <- hmp3avc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- tibble::rownames_to_column(hmp3avc,"Gene")
hmp3avc.degs <- hmp3avc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
hmp3avc.bkground <- hmp3avc %>% dplyr::select(c("Gene"))
hmp3avc.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = hmp3avc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
hmp3avc.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = hmp3avc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hmp3avc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="hmp3avc.degs", listType="Gene")
result<-addList(david, hmp3avc.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="hmp3avc.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "hpm3avc.DEGS.DAVID.txt")
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
muscsvc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = muscsvc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
muscsvc.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = muscsvc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, muscsvc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="muscsvc.degs", listType="Gene")
result<-addList(david, muscsvc.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="muscsvc.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
david
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "muscsvc.DEGS.DAVID.txt")
knitr::opts_chunk$set(echo = TRUE)
