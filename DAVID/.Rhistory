getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.relax.NEG.DEGS.DAVID.thresh1.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
tt <- g1vrev.bkground[1:100]
tt <- g1vrev.bkground[1:100,]
tt
tt <- g1vrev.bkground[1:100,2]
tt
tt <- head(g1vrev.bkground)
tt
tt <- head(g1vrev.bkground,2000)
tt
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,2000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
g1vrev.bkground.ensID
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,1000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.relax.NEG.DEGS.DAVID.thresh2.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,2000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.relax.NEG.DEGS.DAVID.thresh2.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,3000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,3000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.relax.NEG.DEGS.DAVID.thresh2.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,4000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,4000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
tt <- head(g1vrev.bkground,2000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = tt$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 2)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.relax.NEG.DEGS.DAVID.thresh2.txt")
david
ls()
write.xlsx(g1vrev.bkground.ensID, file="bkgrd.xlsx")
write.xlsx(g1vrev.neg.degs.ensID, file="list.xlsx")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
#tt <- head(g1vrev.bkground,2000)
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
write.xlsx(g1vrev.bkground.ensID, file="bkgrd.xlsx")
write.xlsx(g1vrev.neg.degs.ensID, file="list.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart.xlsx", colNames=TRUE, rowNames=TRUE)
evc <- tibble::rownames_to_column(evc,"Gene")
evc.degs <- evc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
evc.bkground <- evc %>% dplyr::select(c("Gene"))
evc.degs.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
evc.bkground.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, evc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.degs", listType="Gene")
result<-addList(david, evc.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.bkground", listType="Background")
knitr::opts_chunk$set(echo = TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) >= 0.58)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.relaxFC.NEG.DEGS.DAVID.all.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.1 & abs(logFC) <= -1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) <= -1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.05 & logFC <= -1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.stdFC.NEG.DEGS.DAVID.all.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.05 & logFC <= -0.58)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.relaxFC.NEG.DEGS.DAVID.all.txt")
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart.xlsx", colNames=TRUE, rowNames=TRUE)
#When re-running on 1/28/21 to capture all results instead of those with EASE < 0.1
#webservices rejected all lists > 3000 length.
#due to this, I needed to use default species background and had to be more stringent with muscle comparison (2FC)
#this work-around failed as well... maybe something wrong with the tool?
evc <- tibble::rownames_to_column(evc,"Gene")
evc.degs <- evc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
#evc.bkground <- evc %>% dplyr::select(c("Gene"))
evc.degs.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#evc.bkground.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, evc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.degs", listType="Gene")
#result<-addList(david, evc.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="evc.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1,"evcDEGS.DAVID_all.txt")
###
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) >= 1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRevDEGS.DAVID_all.txt")
###
hmp3avc <- tibble::rownames_to_column(hmp3avc,"Gene")
hmp3avc.degs <- hmp3avc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
#hmp3avc.bkground <- hmp3avc %>% dplyr::select(c("Gene"))
hmp3avc.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = hmp3avc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#hmp3avc.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = hmp3avc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, hmp3avc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="hmp3avc.degs", listType="Gene")
#result<-addList(david, hmp3avc.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="hmp3avc.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "hpm3avc.DEGS.DAVID_all.txt")
###
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
#muscsvc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = muscsvc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#muscsvc.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = muscsvc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, muscsvc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="muscsvc.degs", listType="Gene")
write.xlsx(muscsvc.degs.ensID, file="muscle_degs.xlsx")
knitr::opts_chunk$set(echo = TRUE)
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) >= 1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.DEGS.relaxFC.DAVID.all.txt")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) >= 1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.DEGS.DAVID.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) >= 1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.DEGS.1.DAVID.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) >= 0.58)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.DEGS.58.DAVID.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.05 & logFC <= -1)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.revDEGS.1.DAVID.txt")
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.neg.degs <- g1vrev %>% filter(adp <= 0.05 & logFC <= -0.58)
#g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.neg.degs.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.neg.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
#g1vrev.bkground.ensID <- na.omit(mapIds(org.Hs.eg.db, keys = g1vrev.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, g1vrev.neg.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="g1vrev.neg.degs", listType="Gene")
#result<-addList(david, g1vrev.bkground.ensID, idType="ENSEMBL_GENE_ID",
#                listName="g1vrev.bkground", listType="Background")
setAnnotationCategories(david, c("GOTERM_BP_DIRECT","GOTERM_MF_DIRECT", "GOTERM_CC_DIRECT",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, threshold=1, "g1vRev.revDEGS.58.DAVID.txt")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
evc <- tibble::rownames_to_column(evc,"Gene")
evc.degs <- evc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
evc.bkground <- evc %>% dplyr::select(c("Gene"))
evc.degs.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.degs$Gene, keytype = "SYMBOL", column="ENSEMBL"))
evc.bkground.ensID <- na.omit(mapIds(org.Mm.eg.db, keys = evc.bkground$Gene, keytype = "SYMBOL", column="ENSEMBL"))
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, evc.degs.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.degs", listType="Gene")
result<-addList(david, evc.bkground.ensID, idType="ENSEMBL_GENE_ID",
listName="evc.bkground", listType="Background")
setwd("Z:/projects/eyskuo-Lees/021021-RNAseq/salmon")
write.table(dumpDat, sep='\t',col.names=TRUE, quote=FALSE, row.names=FALSE, file="210127Lee_summarized.txt")
library(tximport)
library(edgeR)
library(openxlsx)
library(readxl)
library(readr)
setwd("Z:/projects/eyskuo-Lees/021021-RNAseq/salmon")
dir <- getwd()
list.files(dir,"d")
samples <- read.xlsx("samples.xlsx")
samples
samples$Sample
files <- file.path(dir,samples$Folder, "quant.sf")
files
names(files) <- paste0(samples$Condition,".",samples$Sample)
all(file.exists(files))
tx2gene <- read_xlsx("mm10_ens101_txID_to_geneID.xlsx")
txi <- tximport(files, type = "salmon", tx2gene = tx2gene)
names(txi)
intCt <- round((txi$counts),0)
colnames(intCt)<-paste0(colnames(intCt),".intCt")
l2tpm <- log((txi$abundance+1),2)
colnames(l2tpm)<-paste0(colnames(l2tpm),".l2tpm")
dumpDat <- merge(intCt, l2tpm, by=0, all=TRUE)
write.table(dumpDat, sep='\t',col.names=TRUE, quote=FALSE, row.names=FALSE, file="210127Lee_summarized.txt")
writeLines(capture.output(sessionInfo()), "TxtImport_sessionInfo_caw.txt")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(RDAVIDWebService)
library(org.Hs.eg.db)
library(org.Mm.eg.db)
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
E2F <- read.xlsx("../shared_data/HALLMARK_E2F_TARGETS.xlsx", colNames=TRUE, rowNames=FALSE)
TNF  <- read.xlsx("../shared_data/HALLMARK_TNFA_SIGNALING_VIA_NFKB.xlsx", colNames=TRUE, rowNames=FALSE)
MUSC <- read.xlsx("../shared_data/GO_SKELETAL_MUSCLE_CONTRACTION.xlsx", colNames=TRUE, rowNames=FALSE)
E2F.ensID <- mapIds(org.Hs.eg.db, keys = E2F$HALLMARK_E2F_TARGETS, keytype = "SYMBOL", column="ENSEMBL")
david<-DAVIDWebService$new(email="charliew@mit.edu", url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService")
result<-addList(david, E2F.ensID, idType="ENSEMBL_GENE_ID",
listName="E2F", listType="Gene")
setAnnotationCategories(david, c("GOTERM_BP_ALL","GOTERM_MF_ALL", "GOTERM_CC_ALL",
"KEGG_PATHWAY", "REACTOME_PATHWAY","BIOCARTA"))
setCurrentGeneListPosition(david, 1)
setCurrentBackgroundPosition(david, 1)
setCurrentSpecies(david, 1)
getFunctionalAnnotationChartFile(david, "E2F.ALL.DAVID.txt")
