significant = FALSE, correction_method ="g_SCS",
custom_bg = g1vrev$Gene, domain_scope="custom")
write.xlsx(gp.g1vrev.REVDEGS.1$result %>%
select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="g1vrev.revDegs.1.gprofiler.xlsx")
#logFC of 0.58, upREV
g1vrev.REVDEGS.58 <- g1vrev %>% filter(adp <= 0.05 & logFC <= -0.58) %>% dplyr::select(c("Gene"))
#g1vrev.REVDEGS.58.bkground <- g1vrev %>% filter(!Gene %in% g1vrev.REVDEGS.58$Gene) %>% dplyr::select(c("Gene"))
gp.g1vrev.REVDEGS.58 <- gost(query = g1vrev.REVDEGS.58$Gene,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = g1vrev$Gene, domain_scope="custom")
write.xlsx(gp.g1vrev.REVDEGS.58$result %>%
select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="g1vrev.revDegs.58.gprofiler.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(gprofiler2)
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart.xlsx", colNames=TRUE, rowNames=TRUE)
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx.xlsx", colNames=TRUE, rowNames=TRUE)
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
musc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
muscsvc.4degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 4)
muscsvc.4degsSmallP <- muscsvc %>% filter(adp <= 0.0001 & abs(logFC) >= 4)
muscsvc.updegs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 1)
muscsvc.up2degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 2)
muscsvc.up3degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 3)
muscsvc.up4degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 3)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
musc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
muscsvc.4degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 4)
muscsvc.4degsSmallP <- muscsvc %>% filter(adp <= 0.000001 & abs(logFC) >= 4)
muscsvc.updegs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 1)
muscsvc.up2degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 2)
muscsvc.up3degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 3)
muscsvc.up4degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 3)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
musc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
muscsvc.4degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 4)
muscsvc.updegs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 1)
muscsvc.up2degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 2)
muscsvc.up3degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 3)
muscsvc.up4degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 4)
g1vrev.Revdegs <- gost(query = g1vrev.Revdegs$Gene,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = g1vrev.bkground$Gene, domain_scope="custom")
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
musc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
muscsvc.4degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 4)
muscsvc.updegs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 1)
muscsvc.up2degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 2)
muscsvc.up3degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 3)
muscsvc.up4degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 4)
muscsvc.degs.res <- gost(query = muscsvc.degs$Gene,organism = "hsapiens",
sources = c("GO:BP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = musc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.degs.res$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.degs.res.gprofiler.xlsx")
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
musc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
muscsvc.2degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 2)
muscsvc.4degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 4)
muscsvc.updegs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 1)
muscsvc.up2degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 2)
muscsvc.up4degs <- muscsvc %>% filter(adp <= 0.05 & logFC >= 4)
muscsvc.degs.res <- gost(query = muscsvc.degs$Gene,organism = "hsapiens",
sources = c("GO:BP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = musc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.degs.res$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.degs.res.gprofiler.xlsx")
muscsvc.2degs.res <- gost(query = muscsvc.2degs$Gene,organism = "hsapiens",
sources = c("GO:BP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = musc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.2degs.res$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.2degs.res.gprofiler.xlsx")
muscsvc.4degs.res <- gost(query = muscsvc.4degs$Gene,organism = "hsapiens",
sources = c("GO:BP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = musc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.4degs.res$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.4degs.res.gprofiler.xlsx")
muscsvc.updegs.res <- gost(query = muscsvc.updegs$Gene,organism = "hsapiens",
sources = c("GO:BP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = musc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.updegs.res$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.updegs.res.gprofiler.xlsx")
muscsvc.up2degs.res <- gost(query = muscsvc.up2degs$Gene,organism = "hsapiens",
sources = c("GO:BP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = musc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.up2degs.res$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.up2degs.res.gprofiler.xlsx")
muscsvc.up4degs.res <- gost(query = muscsvc.up4degs$Gene,organism = "hsapiens",
sources = c("GO:BP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = musc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.up4degs.res$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.up4degs.res.gprofiler.xlsx")
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- tibble::rownames_to_column(hmp3avc,"Gene")
hmp3avc.degs <- hmp3avc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
hmp3avc.bkground <- hmp3avc %>% dplyr::select(c("Gene"))
hmp3avc.gostres.bg <- gost(query = hmp3avc.degs$Gene,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = hmp3avc.bkground$Gene, domain_scope="custom")
hmp3avc.gostres.bg
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- tibble::rownames_to_column(hmp3avc,"Gene")
hmp3avc.degs <- hmp3avc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
hmp3avc.bkground <- hmp3avc %>% dplyr::select(c("Gene"))
hmp3avc.gostres.kegg.bg <- gost(query = hmp3avc.degs$Gene,organism = "hsapiens", sources = c("KEGG"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = hmp3avc.bkground$Gene, domain_scope="custom")
head(hmp3avc.gostres.kegg.bg$result)
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(gprofiler2)
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
E2F <- read.xlsx("../shared_data/HALLMARK_E2F_TARGETS.xlsx", colNames=TRUE, rowNames=FALSE)
TNF  <- read.xlsx("../shared_data/HALLMARK_TNFA_SIGNALING_VIA_NFKB.xlsx", colNames=TRUE, rowNames=FALSE)
MUSC <- read.xlsx("../shared_data/GO_SKELETAL_MUSCLE_CONTRACTION.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR <- na.omit(PPAR$MGISym)
mmPPar.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(mmPPar.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="mmPPAR.gprofiler.xlsx")
##
E2F.gostres <- gost(query = E2F$HALLMARK_E2F_TARGETS,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(E2F.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="E2F.gprofiler.xlsx")
##
TNF.gostres <- gost(query = TNF$HALLMARK_TNFA_SIGNALING_VIA_NFKB,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(TNF.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="TNF.gprofiler.xlsx")
##
MUSC.gostres <- gost(query = MUSC$GO_SKELETAL_MUSCLE_CONTRACTION,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(MUSC.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="MUSC.gprofiler.xlsx")
evc <- read.xlsx("../shared_data/EvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
g1vrev <- read.xlsx("../shared_data/G1vRev_data.xlsx", colNames=TRUE, rowNames=TRUE)
hmp3avc <- read.xlsx("../shared_data/hpm3_AvC_data.xlsx", colNames=TRUE, rowNames=TRUE)
muscsvc <- read.xlsx("../shared_data/musc_SkeVHeart_data.xlsx", colNames=TRUE, rowNames=TRUE)
evc <- tibble::rownames_to_column(evc,"Gene")
evc.degs <- evc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
evc.bkground <- evc %>% dplyr::select(c("Gene"))
#NOTE: I tested the run using the default annotated background compared to the gene list from the data file.
#There were more annotation hits with the pathway
#evc.gostres <- gost(query = evc.degs$Gene,organism = "mmusculus",
#                sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
#                domain_scope="annotated")
evc.gostres.bg <- gost(query = evc.degs$Gene,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = evc.bkground$Gene, domain_scope="custom")
write.xlsx(evc.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="evc.gprofiler.xlsx")
##
g1vrev <- tibble::rownames_to_column(g1vrev,"Gene")
g1vrev.degs <- g1vrev %>% filter(adp <= 0.05 & abs(logFC) >= 1)
g1vrev.bkground <- g1vrev %>% dplyr::select(c("Gene"))
g1vrev.gostres.bg <- gost(query = g1vrev.degs$Gene,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = g1vrev.bkground$Gene, domain_scope="custom")
write.xlsx(g1vrev.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="g1vrev.gprofiler.xlsx")
##
hmp3avc <- tibble::rownames_to_column(hmp3avc,"Gene")
hmp3avc.degs <- hmp3avc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
hmp3avc.bkground <- hmp3avc %>% dplyr::select(c("Gene"))
hmp3avc.gostres.bg <- gost(query = hmp3avc.degs$Gene,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = hmp3avc.bkground$Gene, domain_scope="custom")
write.xlsx(hmp3avc.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="hmp3avc.gprofiler.xlsx")
##
muscsvc <- tibble::rownames_to_column(muscsvc,"Gene")
muscsvc.degs <- muscsvc %>% filter(adp <= 0.05 & abs(logFC) >= 1)
muscsvc.bkground <- muscsvc %>% dplyr::select(c("Gene"))
muscsvc.gostres.bg <- gost(query = muscsvc.degs$Gene,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = muscsvc.bkground$Gene, domain_scope="custom")
write.xlsx(muscsvc.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="muscsvc.gprofiler.xlsx")
#p <- gostplot(mmPPar.gostres, capped = FALSE, interactive = FALSE)
#p
table(muscsvc.degs$Gene)
length(muscsvc.degs)
dim(muscsvc.degs)
dim(muscsvc.2degs)
dim(muscsvc.4degs)
muscsvc.4degs
head(muscsvc.4degs)
tail(muscsvc.4degs)
dim(muscsvc.degs)
dim(muscsvc.2degs)
dim(muscsvc.4degs)
dim(muscsvc.updegs)
dim(muscsvc.up2degs)
dim(muscsvc.up4degs)
head(mmPPar.gostres)
head(mmPPar.gostres$result
)
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"), significant = FALSE,
domain_scope="annotated")'
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus", sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"), significant = FALSE, domain_scope="annotated")'
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
dim(mmPPar.b.result)
head(mmPPar.b.result)
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
head(mmPPar.b.result)
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value))
head(mmPPar.b.result)
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
table(PPAR.conceptPlot$source)
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.2) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=2, width=0.2) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.2) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.2) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=1, width=0.2) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.2) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.2) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=1, width=0.2) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.2) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value,10))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value,10))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value,10))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log(p_value,10))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(gprofiler2)
PPAR <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
E2F <- read.xlsx("../shared_data/HALLMARK_E2F_TARGETS.xlsx", colNames=TRUE, rowNames=FALSE)
TNF  <- read.xlsx("../shared_data/HALLMARK_TNFA_SIGNALING_VIA_NFKB.xlsx", colNames=TRUE, rowNames=FALSE)
MUSC <- read.xlsx("../shared_data/GO_SKELETAL_MUSCLE_CONTRACTION.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR <- na.omit(PPAR$MGISym)
mmPPar.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(mmPPar.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="mmPPAR.gprofiler.xlsx")
##
E2F.gostres <- gost(query = E2F$HALLMARK_E2F_TARGETS,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(E2F.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="E2F.gprofiler.xlsx")
##
TNF.gostres <- gost(query = TNF$HALLMARK_TNFA_SIGNALING_VIA_NFKB,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(TNF.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="TNF.gprofiler.xlsx")
##
MUSC.gostres <- gost(query = MUSC$GO_SKELETAL_MUSCLE_CONTRACTION,organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
domain_scope="annotated")
write.xlsx(MUSC.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="MUSC.gprofiler.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept <- PPAR.gsea.concept %>% mutate(neglogP = -log10(FDR))
head(PPAR.gsea.concept)
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept <- PPAR.gsea.concept %>% mutate(neglogP = -log10(FDR.q-value))
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept <- PPAR.gsea.concept %>% mutate(neglogP = -log10(FDR))
PPAR.gsea.concept.Hit <- PPAR.gsea.concept %>% filter(Result == "Hit")
PPAR.gsea.concept.Low <- PPAR.gsea.concept %>% filter(Result == "Low")
PPAR.gsea.concept.Other <- PPAR.gsea.concept %>% filter(Result == "Other")
ggplot() + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(Group, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Low, aes(x=factor(source, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(source, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept <- PPAR.gsea.concept %>% mutate(neglogP = -log10(FDR))
PPAR.gsea.concept.Hit <- PPAR.gsea.concept %>% filter(Result == "Hit")
PPAR.gsea.concept.Low <- PPAR.gsea.concept %>% filter(Result == "Low")
PPAR.gsea.concept.Other <- PPAR.gsea.concept %>% filter(Result == "Other")
ggplot() + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(Group, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Low, aes(x=factor(Group, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(Group, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept <- PPAR.gsea.concept %>% mutate(neglogP = -log10(FDR))
PPAR.gsea.concept.Hit <- PPAR.gsea.concept %>% filter(Result == "Hit")
PPAR.gsea.concept.Low <- PPAR.gsea.concept %>% filter(Result == "Low")
PPAR.gsea.concept.Other <- PPAR.gsea.concept %>% filter(Result == "Other")
ggplot() + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(Group, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Low, aes(x=factor(Group, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Hit, aes(x=factor(Group, level = c('C5BP','C5MF','C5CC','C2CGP','C2CP','HALLMARK')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept <- PPAR.gsea.concept %>% mutate(neglogP = -log10(FDR))
PPAR.gsea.concept.Hit <- PPAR.gsea.concept %>% filter(Result == "Hit")
PPAR.gsea.concept.Low <- PPAR.gsea.concept %>% filter(Result == "Low")
PPAR.gsea.concept.Other <- PPAR.gsea.concept %>% filter(Result == "Other")
ggplot() + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Low, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Hit, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
table(PPAR.gsea.concept$Group)
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept <- PPAR.gsea.concept %>% mutate(neglogP = -log10(FDR))
PPAR.gsea.concept.Hit <- PPAR.gsea.concept %>% filter(Result == "Hit")
PPAR.gsea.concept.Low <- PPAR.gsea.concept %>% filter(Result == "Low")
PPAR.gsea.concept.Other <- PPAR.gsea.concept %>% filter(Result == "Other")
ggplot() + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Low, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Hit, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.gsea.concept <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_msigdbOverlaps_FULL.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.gsea.concept.Hit <- PPAR.gsea.concept %>% filter(Result == "Hit")
PPAR.gsea.concept.Low <- PPAR.gsea.concept %>% filter(Result == "Low")
PPAR.gsea.concept.Other <- PPAR.gsea.concept %>% filter(Result == "Other")
ggplot() + geom_jitter(data=PPAR.gsea.concept.Other, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Low, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.gsea.concept.Hit, aes(x=factor(Group, level = c('HALLMARK','C2CP','C2CGP','C5BP','C5CC','C2MP')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
PPAR.b <- read.xlsx("../shared_data/KEGG_PPAR_SIGNALING_PATHWAY_withMouse.xlsx", colNames=TRUE, rowNames=FALSE)
mmPPAR.b <- na.omit(PPAR.b$MGISym)
mmPPar.b.gostres <- gost(query = mmPPAR,organism = "mmusculus",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
correction_method ="g_SCS", significant = FALSE, domain_scope="annotated")
mmPPar.b.result <- mmPPar.b.gostres$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size"))
mmPPar.b.result <- mmPPar.b.result %>% mutate(neglogP = -log10(p_value))
write.xlsx(mmPPar.b.result, file="mmPPar.b.result.xlsx")
#manually added annotations to the above output file, top 10 with Hit, non-top10, sub 0.05 with Low, remainder with Other
PPAR.conceptPlot <- read.xlsx("../g_profiler/mmPPar.conceptDemo.xlsx", colNames=TRUE, rowNames=FALSE)
PPAR.concept.Hit <- PPAR.conceptPlot %>% filter(Group == "Hit")
PPAR.concept.Low <- PPAR.conceptPlot %>% filter(Group == "Low")
PPAR.concept.Other <- PPAR.conceptPlot %>% filter(Group == "Other")
ggplot() + geom_jitter(data=PPAR.concept.Other, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="black", alpha=0.2, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Low, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="blue", alpha=0.6, size=1, width=0.3) + geom_jitter(data=PPAR.concept.Hit, aes(x=factor(source, level = c('GO:BP','GO:MF','GO:CC','KEGG','REAC','WP')),y=neglogP), color="red", alpha=1, size=3, width=0.3) + geom_hline(aes(yintercept=1.3, color = "red"), size=1, show.legend=FALSE) + theme_bw() + coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(gprofiler2)
covidPathways <- read.xlsx("/Users/Charlie/Desktop/DEG_genes.xlsx", colNames=TRUE, rowNames=TRUE)
head(covidPathways)
covidPathways <- tibble::rownames_to_column(covidPathways,"gene")
DEG_sig.degs <- covidPathways %>% filter(padj <= 0.05 & abs(log2FoldChange) >= 1)
DEG.bkground <- covidPathways %>% dplyr::select(c("gene"))
covidPathways.gostres.bg <- gost(query = DEG_sig.degs$gene, organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = DEG.bkground$gene, domain_scope="custom")
write.xlsx(covidPathays.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="covidPathways.gprofiler.xlsx")
DEG_sig.degs
covidPathways <- tibble::rownames_to_column(covidPathways,"ENSid")
DEG_sig.degs <- covidPathways %>% filter(padj <= 0.05 & abs(log2FoldChange) >= 1)
DEG.bkground <- covidPathways %>% dplyr::select(c("gene_name"))
covidPathways.gostres.bg <- gost(query = DEG_sig.degs$gene_name, organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = DEG.bkground$gene, domain_scope="custom")
write.xlsx(covidPathays.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="covidPathways.gprofiler.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(ggplot2)
library(tidyverse)
library(gprofiler2)
covidPathways <- read.xlsx("/Users/Charlie/Desktop/DEG_genes.xlsx", colNames=TRUE, rowNames=TRUE)
covidPathways <- tibble::rownames_to_column(covidPathways,"ENSid")
DEG_sig.degs <- covidPathways %>% filter(padj <= 0.05 & abs(log2FoldChange) >= 1)
DEG.bkground <- covidPathways %>% dplyr::select(c("gene_name"))
covidPathways.gostres.bg <- gost(query = DEG_sig.degs$gene_name, organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = DEG.bkground$gene, domain_scope="custom")
write.xlsx(covidPathays.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="covidPathways.gprofiler.xlsx")
write.xlsx(covidPathways.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="covidPathways.gprofiler.xlsx")
covidPathways <- tibble::rownames_to_column(covidPathways,"ENSid")
covidPathways <- read.xlsx("/Users/Charlie/Desktop/DEG_genes.xlsx", colNames=TRUE, rowNames=TRUE)
covidPathways <- tibble::rownames_to_column(covidPathways,"ENSid")
DEG_sig.degs <- covidPathways %>% filter(padj <= 0.05 & abs(log2FoldChange) >= 1)
DEG.bkground <- covidPathways %>% dplyr::select(c("gene_name"))
covidPathways.gostres.bg <- gost(query = DEG_sig.degs$gene_name, organism = "hsapiens",
sources = c("GO:BP", "GO:MF", "GO:CC", "KEGG", "REAC", "WP"),
significant = FALSE, correction_method ="g_SCS",
custom_bg = DEG.bkground$gene, domain_scope="custom")
write.xlsx(covidPathways.gostres.bg$result %>% select(c("term_id", "term_name","source","p_value", "query_size", "intersection_size")), file="covidPathways.gprofiler.xlsx")
covidPathways.gostres.bg$result
head(covidPathways.gostres.bg$result)
